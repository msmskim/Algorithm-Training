# Intro
 'Hello Coding 그림으로 개념을 이해하는 알고리즘, 아디트야 바르가바, 김도형, 한빛미디어' Chapter 2 선택 정렬을 읽고 정리한 글 입니다.
 
# 메모리가 동작하는 방법
 메모리에 무언가를 저장해야 할 때마다 컴퓨터에 공간 요청, 그러면 컴퓨터는 저장 공간의 주소 제공, 만약 여러 개의 원소를 저장해야 한다면
 배열과  리스트라는 두 가지 방법 중 하나를 사용
 
# 배열과 연결 리스트
 연결 리스트의 경우 요소를 메모리의 어느 곳에나 둘 수 있음, 각 원소에는 목록의 다음 원소에 대한 주소가 저장, 여러 가지 임의의 메모리 주소들이
 하나의 목록으로 연결
 
 배열은 모든 원소의 주소를 다 알고 있음, 특정 요소를 파악하기 좋음, 반면 연결 리스트는 모든 값을 한 번에 읽으면 좋지만, 특정 요소를 찾을 때는 별로임
 
# 용어
 원소의 위치는 인덱스
 
 배열에서 읽기는 O(1), 리스트에서 읽기는 O(n), 배열에서 삽입은 O(n), 리스트에서 삽입은 O(1)이 소요
 
# 가운데 삽입하기
 삽입 시 리스트는 이전 원소가 무엇을 가리키는지 바꾸기만 하면 됨, 배열은 다음에 오는 모든 원소의 위치를 바꿔야 함
 
# 삭제하기
 삭제의 경우에도 리스트는 이전 원소가 가리키는 위치만 바꾸면 됨, 하지만 배열은 모든 것을 다 옮겨야 함
 
 읽기의 문제에서 임의 접근과 순차 접근이 있는데 연결 리스트는 순차 접근 밖에 못 함, 10 번째 원소를 읽으려면 그 앞의 9개를 읽어서 10번 째로 가는
 주소를 찾아야 함, 반면 임의 접근은 10번째 원소로 바로 건너뛸 수 있는데, 배열은 임의 접근 사용 가능

# 선택 정렬
 예) 가장 많이 들은 목록부터 가장 적게 들은 순으로 정렬하여 가장 좋아하는 가수 순위 알고 싶을 때, 전화번호부의 이름, 여행 날짜, 이메일(새로운 것에서
 오래된 것 순으로)
 
 O(n^2) 시간 소요
 
# 출처
'Hello Coding 그림으로 개념을 이해하는 알고리즘, 아디트야 바르가바, 김도형, 한빛미디어'
